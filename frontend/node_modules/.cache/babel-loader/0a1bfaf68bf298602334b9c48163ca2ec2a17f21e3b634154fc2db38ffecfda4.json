{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getJSON, postJSON } from \"../api\";\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\nexport const fetchMe = createAsyncThunk(\"auth/me\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    return await getJSON(\"/api/auth/me\");\n  } catch (e) {\n    return rejectWithValue((e === null || e === void 0 ? void 0 : e.message) || \"Failed\");\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    return await postJSON(\"/api/auth/login\", payload);\n  } catch (e) {\n    return rejectWithValue((e === null || e === void 0 ? void 0 : e.message) || \"Login failed\");\n  }\n});\nexport const register = createAsyncThunk(\"auth/register\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    return await postJSON(\"/api/auth/register\", payload);\n  } catch (e) {\n    return rejectWithValue((e === null || e === void 0 ? void 0 : e.message) || \"Register failed\");\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await postJSON(\"/api/auth/logout\", {});\n});\nconst slice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n  extraReducers: b => {\n    b.addCase(fetchMe.pending, s => {\n      s.loading = true;\n      s.error = null;\n    });\n    b.addCase(fetchMe.fulfilled, (s, a) => {\n      s.loading = false;\n      s.user = a.payload || null;\n    });\n    b.addCase(fetchMe.rejected, (s, a) => {\n      s.loading = false;\n      s.error = a.payload || \"Failed\";\n    });\n    b.addCase(login.fulfilled, (s, a) => {\n      s.user = a.payload;\n    });\n    b.addCase(register.fulfilled, (s, a) => {\n      s.user = a.payload;\n    });\n    b.addCase(logout.fulfilled, s => {\n      s.user = null;\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getJSON","postJSON","initialState","user","loading","error","fetchMe","_","rejectWithValue","e","message","login","payload","register","logout","slice","name","reducers","extraReducers","b","addCase","pending","s","fulfilled","a","rejected","reducer"],"sources":["C:/Users/SÃ¼leyman/Desktop/FoodOrdering/frontend/src/store/authSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getJSON, postJSON } from \"../api\";\r\n\r\nexport type User = { id: number; email: string; name: string | null };\r\n\r\ntype AuthState = { user: User | null; loading: boolean; error?: string | null };\r\nconst initialState: AuthState = { user: null, loading: false, error: null };\r\n\r\nexport const fetchMe = createAsyncThunk<User | null>(\"auth/me\", async (_, { rejectWithValue }) => {\r\n  try { return await getJSON<User | null>(\"/api/auth/me\"); }\r\n  catch (e: any) { return rejectWithValue(e?.message || \"Failed\") as any; }\r\n});\r\n\r\nexport const login = createAsyncThunk<User, { email: string; password: string }>(\r\n  \"auth/login\",\r\n  async (payload, { rejectWithValue }) => {\r\n    try { return await postJSON<User>(\"/api/auth/login\", payload); }\r\n    catch (e: any) { return rejectWithValue(e?.message || \"Login failed\") as any; }\r\n  }\r\n);\r\n\r\nexport const register = createAsyncThunk<User, { name?: string; email: string; password: string }>(\r\n  \"auth/register\",\r\n  async (payload, { rejectWithValue }) => {\r\n    try { return await postJSON<User>(\"/api/auth/register\", payload); }\r\n    catch (e: any) { return rejectWithValue(e?.message || \"Register failed\") as any; }\r\n  }\r\n);\r\n\r\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n  await postJSON(\"/api/auth/logout\", {});\r\n});\r\n\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (b) => {\r\n    b.addCase(fetchMe.pending, (s) => { s.loading = true; s.error = null; });\r\n    b.addCase(fetchMe.fulfilled, (s, a) => { s.loading = false; s.user = a.payload || null; });\r\n    b.addCase(fetchMe.rejected, (s, a) => { s.loading = false; s.error = (a.payload as any) || \"Failed\"; });\r\n\r\n    b.addCase(login.fulfilled, (s, a) => { s.user = a.payload; });\r\n    b.addCase(register.fulfilled, (s, a) => { s.user = a.payload; });\r\n    b.addCase(logout.fulfilled, (s) => { s.user = null; });\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}