{"ast":null,"code":"var _process$env$REACT_AP;\n// tek kaynak olsun\nexport const API_URL = ((_process$env$REACT_AP = process.env.REACT_APP_API_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'http://localhost:8080') + '/api';\nexport async function postJSON(path, body) {\n  const res = await fetch(API_URL + path, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(body)\n  });\n  if (!res.ok) throw new Error(await res.text().catch(() => res.statusText));\n  return res.json();\n}\n\n// JSON GET (gerekirse)\nexport async function getJSON(path) {\n  const res = await fetch(`${API_URL}${path}`, {\n    credentials: \"include\"\n  });\n  if (!res.ok) {\n    const msg = await res.text().catch(() => res.statusText);\n    throw new Error(msg || `HTTP ${res.status}`);\n  }\n  return await res.json();\n}","map":{"version":3,"names":["API_URL","_process$env$REACT_AP","process","env","REACT_APP_API_URL","postJSON","path","body","res","fetch","method","headers","credentials","JSON","stringify","ok","Error","text","catch","statusText","json","getJSON","msg","status"],"sources":["C:/Users/SÃ¼leyman/Desktop/FoodOrdering/frontend/src/lib/api.ts"],"sourcesContent":["// tek kaynak olsun\r\nexport const API_URL =\r\n  (process.env.REACT_APP_API_URL ?? 'http://localhost:8080') + '/api';\r\n\r\nexport async function postJSON(path: string, body: unknown) {\r\n  const res = await fetch(API_URL + path, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    credentials: 'include',\r\n    body: JSON.stringify(body),\r\n  });\r\n  if (!res.ok) throw new Error(await res.text().catch(() => res.statusText));\r\n  return res.json();\r\n}\r\n\r\n\r\n// JSON GET (gerekirse)\r\nexport async function getJSON<T>(path: string): Promise<T> {\r\n  const res = await fetch(`${API_URL}${path}`, { credentials: \"include\" });\r\n  if (!res.ok) {\r\n    const msg = await res.text().catch(() => res.statusText);\r\n    throw new Error(msg || `HTTP ${res.status}`);\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n"],"mappings":";AAAA;AACA,OAAO,MAAMA,OAAO,GAClB,EAAAC,qBAAA,GAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,uBAAuB,IAAI,MAAM;AAErE,OAAO,eAAeI,QAAQA,CAACC,IAAY,EAAEC,IAAa,EAAE;EAC1D,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACT,OAAO,GAAGM,IAAI,EAAE;IACtCI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,WAAW,EAAE,SAAS;IACtBL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAMV,GAAG,CAACW,UAAU,CAAC,CAAC;EAC1E,OAAOX,GAAG,CAACY,IAAI,CAAC,CAAC;AACnB;;AAGA;AACA,OAAO,eAAeC,OAAOA,CAAIf,IAAY,EAAc;EACzD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,GAAGM,IAAI,EAAE,EAAE;IAAEM,WAAW,EAAE;EAAU,CAAC,CAAC;EACxE,IAAI,CAACJ,GAAG,CAACO,EAAE,EAAE;IACX,MAAMO,GAAG,GAAG,MAAMd,GAAG,CAACS,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAMV,GAAG,CAACW,UAAU,CAAC;IACxD,MAAM,IAAIH,KAAK,CAACM,GAAG,IAAI,QAAQd,GAAG,CAACe,MAAM,EAAE,CAAC;EAC9C;EACA,OAAQ,MAAMf,GAAG,CAACY,IAAI,CAAC,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}