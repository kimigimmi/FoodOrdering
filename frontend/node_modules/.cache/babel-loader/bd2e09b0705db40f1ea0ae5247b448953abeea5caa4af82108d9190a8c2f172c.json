{"ast":null,"code":"// Tek yerden API kökü\n// CRA için REACT_APP_ değişkenini, yoksa localhost'u kullanıyoruz.\nconst RAW = (process.env.REACT_APP_API_URL || \"http://localhost:8080\").trim();\n// Sondaki / işaretlerini temizle\nexport const API_URL = RAW.replace(/\\/+$/, \"\");\nasync function request(path, init = {}) {\n  const res = await fetch(`${API_URL}${path}`, {\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(init.headers || {})\n    },\n    ...init\n  });\n  if (!res.ok) {\n    const txt = (await res.text().catch(() => \"\")) || res.statusText;\n    throw new Error(txt);\n  }\n  // 204 No Content ise JSON yoktur\n  if (res.status === 204) return undefined;\n  return await res.json();\n}\nexport function getJSON(path) {\n  return request(path, {\n    method: \"GET\"\n  });\n}\nexport function postJSON(path, body) {\n  return request(path, {\n    method: \"POST\",\n    body: body ? JSON.stringify(body) : undefined\n  });\n}","map":{"version":3,"names":["RAW","process","env","REACT_APP_API_URL","trim","API_URL","replace","request","path","init","res","fetch","credentials","headers","ok","txt","text","catch","statusText","Error","status","undefined","json","getJSON","method","postJSON","body","JSON","stringify"],"sources":["C:/Users/Süleyman/Desktop/FoodOrdering/frontend/src/store/api.ts"],"sourcesContent":["// Tek yerden API kökü\r\n// CRA için REACT_APP_ değişkenini, yoksa localhost'u kullanıyoruz.\r\nconst RAW = (process.env.REACT_APP_API_URL || \"http://localhost:8080\").trim();\r\n// Sondaki / işaretlerini temizle\r\nexport const API_URL = RAW.replace(/\\/+$/, \"\");\r\n\r\ntype Json = Record<string, any>;\r\n\r\nasync function request<T>(\r\n  path: string,\r\n  init: RequestInit = {}\r\n): Promise<T> {\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    credentials: \"include\",\r\n    headers: { \"Content-Type\": \"application/json\", ...(init.headers || {}) },\r\n    ...init,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const txt = (await res.text().catch(() => \"\")) || res.statusText;\r\n    throw new Error(txt);\r\n  }\r\n  // 204 No Content ise JSON yoktur\r\n  if (res.status === 204) return undefined as unknown as T;\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport function getJSON<T>(path: string) {\r\n  return request<T>(path, { method: \"GET\" });\r\n}\r\n\r\nexport function postJSON<T>(path: string, body?: Json) {\r\n  return request<T>(path, {\r\n    method: \"POST\",\r\n    body: body ? JSON.stringify(body) : undefined,\r\n  });\r\n}\r\n"],"mappings":"AAAA;AACA;AACA,MAAMA,GAAG,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,EAAEC,IAAI,CAAC,CAAC;AAC7E;AACA,OAAO,MAAMC,OAAO,GAAGL,GAAG,CAACM,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAI9C,eAAeC,OAAOA,CACpBC,IAAY,EACZC,IAAiB,GAAG,CAAC,CAAC,EACV;EACZ,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,GAAGG,IAAI,EAAE,EAAE;IAC3CI,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,IAAIJ,IAAI,CAACI,OAAO,IAAI,CAAC,CAAC;IAAE,CAAC;IACxE,GAAGJ;EACL,CAAC,CAAC;EAEF,IAAI,CAACC,GAAG,CAACI,EAAE,EAAE;IACX,MAAMC,GAAG,GAAG,CAAC,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC,KAAKP,GAAG,CAACQ,UAAU;IAChE,MAAM,IAAIC,KAAK,CAACJ,GAAG,CAAC;EACtB;EACA;EACA,IAAIL,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE,OAAOC,SAAS;EACxC,OAAQ,MAAMX,GAAG,CAACY,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,SAASC,OAAOA,CAAIf,IAAY,EAAE;EACvC,OAAOD,OAAO,CAAIC,IAAI,EAAE;IAAEgB,MAAM,EAAE;EAAM,CAAC,CAAC;AAC5C;AAEA,OAAO,SAASC,QAAQA,CAAIjB,IAAY,EAAEkB,IAAW,EAAE;EACrD,OAAOnB,OAAO,CAAIC,IAAI,EAAE;IACtBgB,MAAM,EAAE,MAAM;IACdE,IAAI,EAAEA,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,GAAGL;EACtC,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}