{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getJSON, postJSON } from \"../api\";\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\nexport const fetchMe = createAsyncThunk(\"auth/me\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    return await getJSON(\"/api/auth/me\");\n  } catch (e) {\n    return rejectWithValue((e === null || e === void 0 ? void 0 : e.message) || \"Failed to load session\");\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    return await postJSON(\"/api/auth/login\", payload);\n  } catch (e) {\n    return rejectWithValue((e === null || e === void 0 ? void 0 : e.message) || \"Login failed\");\n  }\n});\nexport const register = createAsyncThunk(\"auth/register\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    return await postJSON(\"/api/auth/register\", payload);\n  } catch (e) {\n    return rejectWithValue((e === null || e === void 0 ? void 0 : e.message) || \"Register failed\");\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await postJSON(\"/api/auth/logout\", {});\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n  extraReducers: b => {\n    b.addCase(fetchMe.pending, s => {\n      s.loading = true;\n      s.error = null;\n    });\n    b.addCase(fetchMe.fulfilled, (s, a) => {\n      s.loading = false;\n      s.user = a.payload || null;\n    });\n    b.addCase(fetchMe.rejected, (s, a) => {\n      s.loading = false;\n      s.error = a.payload || \"Failed\";\n    });\n    b.addCase(login.pending, s => {\n      s.loading = true;\n      s.error = null;\n    });\n    b.addCase(login.fulfilled, (s, a) => {\n      s.loading = false;\n      s.user = a.payload;\n    });\n    b.addCase(login.rejected, (s, a) => {\n      s.loading = false;\n      s.error = a.payload || \"Failed\";\n    });\n    b.addCase(register.fulfilled, (s, a) => {\n      s.user = a.payload;\n    });\n    b.addCase(logout.fulfilled, s => {\n      s.user = null;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getJSON","postJSON","initialState","user","loading","error","fetchMe","_","rejectWithValue","e","message","login","payload","register","logout","authSlice","name","reducers","extraReducers","b","addCase","pending","s","fulfilled","a","rejected","reducer"],"sources":["C:/Users/SÃ¼leyman/Desktop/FoodOrdering/frontend/src/store/authSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getJSON, postJSON } from \"../api\";\r\n\r\nexport type User = { id: number; email: string; name: string | null };\r\n\r\ntype AuthState = {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error?: string | null;\r\n};\r\n\r\nconst initialState: AuthState = { user: null, loading: false, error: null };\r\n\r\nexport const fetchMe = createAsyncThunk<User | null>(\r\n  \"auth/me\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      return await getJSON<User | null>(\"/api/auth/me\");\r\n    } catch (e: any) {\r\n      return rejectWithValue(e?.message || \"Failed to load session\") as any;\r\n    }\r\n  }\r\n);\r\n\r\nexport const login = createAsyncThunk<User, { email: string; password: string }>(\r\n  \"auth/login\",\r\n  async (payload, { rejectWithValue }) => {\r\n    try {\r\n      return await postJSON<User>(\"/api/auth/login\", payload);\r\n    } catch (e: any) {\r\n      return rejectWithValue(e?.message || \"Login failed\") as any;\r\n    }\r\n  }\r\n);\r\n\r\nexport const register = createAsyncThunk<\r\n  User,\r\n  { name?: string; email: string; password: string }\r\n>(\"auth/register\", async (payload, { rejectWithValue }) => {\r\n  try {\r\n    return await postJSON<User>(\"/api/auth/register\", payload);\r\n  } catch (e: any) {\r\n    return rejectWithValue(e?.message || \"Register failed\") as any;\r\n  }\r\n});\r\n\r\nexport const logout = createAsyncThunk<void>(\"auth/logout\", async () => {\r\n  await postJSON(\"/api/auth/logout\", {});\r\n});\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (b) => {\r\n    b.addCase(fetchMe.pending, (s) => {\r\n      s.loading = true;\r\n      s.error = null;\r\n    });\r\n    b.addCase(fetchMe.fulfilled, (s, a) => {\r\n      s.loading = false;\r\n      s.user = a.payload || null;\r\n    });\r\n    b.addCase(fetchMe.rejected, (s, a) => {\r\n      s.loading = false;\r\n      s.error = (a.payload as any) || \"Failed\";\r\n    });\r\n\r\n    b.addCase(login.pending, (s) => {\r\n      s.loading = true;\r\n      s.error = null;\r\n    });\r\n    b.addCase(login.fulfilled, (s, a) => {\r\n      s.loading = false;\r\n      s.user = a.payload;\r\n    });\r\n    b.addCase(login.rejected, (s, a) => {\r\n      s.loading = false;\r\n      s.error = (a.payload as any) || \"Failed\";\r\n    });\r\n\r\n    b.addCase(register.fulfilled, (s, a) => {\r\n      s.user = a.payload;\r\n    });\r\n\r\n    b.addCase(logout.fulfilled, (s) => {\r\n      s.user = null;\r\n    });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}