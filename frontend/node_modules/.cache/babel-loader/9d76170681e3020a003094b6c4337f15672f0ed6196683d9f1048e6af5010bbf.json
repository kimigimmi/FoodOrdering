{"ast":null,"code":"// frontend/src/lib/api.ts\n\n// CRA (react-scripts) kullanıyorsanız .env tarafında REACT_APP_API_URL tanımlayabilirsiniz.\n// Tanımlı değilse http://localhost:8080 fallback'i kullanır.\nexport const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8080\";\n\n/** Genel fetch helper (JSON gövde + credentials) */\nasync function request(path, options = {}) {\n  const res = await fetch(`${API_URL}${path}`, {\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(options.headers || {})\n    },\n    ...options\n  });\n\n  // 204 gibi gövdesiz durumlarda hata fırlatmayalım\n  if (res.status === 204) return undefined;\n  if (!res.ok) {\n    const text = await res.text().catch(() => res.statusText);\n    throw new Error(text || res.statusText);\n  }\n\n  // JSON dışı cevap beklemiyorsak parsing yap\n  return res.json();\n}\n\n/** GET JSON */\nexport function getJSON(path) {\n  return request(path, {\n    method: \"GET\"\n  });\n}\n\n/** POST JSON */\nexport function postJSON(path, body) {\n  return request(path, {\n    method: \"POST\",\n    body: JSON.stringify(body)\n  });\n}\n\n/** DELETE JSON (gerekirse) */\nexport function delJSON(path, body) {\n  return request(path, {\n    method: \"DELETE\",\n    body: body ? JSON.stringify(body) : undefined\n  });\n}\n\n/** OAuth yönlendirme URL'i (Google/Microsoft butonları için) */\nexport function oauthURL(provider) {\n  return `${API_URL}/api/oauth/${provider}`;\n}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","request","path","options","res","fetch","credentials","headers","status","undefined","ok","text","catch","statusText","Error","json","getJSON","method","postJSON","body","JSON","stringify","delJSON","oauthURL","provider"],"sources":["C:/Users/Süleyman/Desktop/FoodOrdering/frontend/src/lib/api.ts"],"sourcesContent":["// frontend/src/lib/api.ts\r\n\r\n// CRA (react-scripts) kullanıyorsanız .env tarafında REACT_APP_API_URL tanımlayabilirsiniz.\r\n// Tanımlı değilse http://localhost:8080 fallback'i kullanır.\r\nexport const API_URL =\r\n  process.env.REACT_APP_API_URL || \"http://localhost:8080\";\r\n\r\n/** Genel fetch helper (JSON gövde + credentials) */\r\nasync function request<T>(\r\n  path: string,\r\n  options: RequestInit = {}\r\n): Promise<T> {\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...(options.headers || {}),\r\n    },\r\n    ...options,\r\n  });\r\n\r\n  // 204 gibi gövdesiz durumlarda hata fırlatmayalım\r\n  if (res.status === 204) return undefined as T;\r\n\r\n  if (!res.ok) {\r\n    const text = await res.text().catch(() => res.statusText);\r\n    throw new Error(text || res.statusText);\r\n  }\r\n\r\n  // JSON dışı cevap beklemiyorsak parsing yap\r\n  return res.json() as Promise<T>;\r\n}\r\n\r\n/** GET JSON */\r\nexport function getJSON<T>(path: string): Promise<T> {\r\n  return request<T>(path, { method: \"GET\" });\r\n}\r\n\r\n/** POST JSON */\r\nexport function postJSON<T>(path: string, body: unknown): Promise<T> {\r\n  return request<T>(path, { method: \"POST\", body: JSON.stringify(body) });\r\n}\r\n\r\n/** DELETE JSON (gerekirse) */\r\nexport function delJSON<T>(path: string, body?: unknown): Promise<T> {\r\n  return request<T>(path, {\r\n    method: \"DELETE\",\r\n    body: body ? JSON.stringify(body) : undefined,\r\n  });\r\n}\r\n\r\n/** OAuth yönlendirme URL'i (Google/Microsoft butonları için) */\r\nexport function oauthURL(provider: \"google\" | \"microsoft\") {\r\n  return `${API_URL}/api/oauth/${provider}`;\r\n}\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA,OAAO,MAAMA,OAAO,GAClBC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE1D;AACA,eAAeC,OAAOA,CACpBC,IAAY,EACZC,OAAoB,GAAG,CAAC,CAAC,EACb;EACZ,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,GAAGK,IAAI,EAAE,EAAE;IAC3CI,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,IAAIJ,OAAO,CAACI,OAAO,IAAI,CAAC,CAAC;IAC3B,CAAC;IACD,GAAGJ;EACL,CAAC,CAAC;;EAEF;EACA,IAAIC,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE,OAAOC,SAAS;EAExC,IAAI,CAACL,GAAG,CAACM,EAAE,EAAE;IACX,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAMR,GAAG,CAACS,UAAU,CAAC;IACzD,MAAM,IAAIC,KAAK,CAACH,IAAI,IAAIP,GAAG,CAACS,UAAU,CAAC;EACzC;;EAEA;EACA,OAAOT,GAAG,CAACW,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,SAASC,OAAOA,CAAId,IAAY,EAAc;EACnD,OAAOD,OAAO,CAAIC,IAAI,EAAE;IAAEe,MAAM,EAAE;EAAM,CAAC,CAAC;AAC5C;;AAEA;AACA,OAAO,SAASC,QAAQA,CAAIhB,IAAY,EAAEiB,IAAa,EAAc;EACnE,OAAOlB,OAAO,CAAIC,IAAI,EAAE;IAAEe,MAAM,EAAE,MAAM;IAAEE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;EAAE,CAAC,CAAC;AACzE;;AAEA;AACA,OAAO,SAASG,OAAOA,CAAIpB,IAAY,EAAEiB,IAAc,EAAc;EACnE,OAAOlB,OAAO,CAAIC,IAAI,EAAE;IACtBe,MAAM,EAAE,QAAQ;IAChBE,IAAI,EAAEA,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,GAAGV;EACtC,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASc,QAAQA,CAACC,QAAgC,EAAE;EACzD,OAAO,GAAG3B,OAAO,cAAc2B,QAAQ,EAAE;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}