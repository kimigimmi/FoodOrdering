{"ast":null,"code":"// Tek doğruluk kaynağı: backend tabanı\nexport const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8080\";\n\n// JSON POST + cookie (JWT) taşımak için\nexport async function postJSON(path, body) {\n  const res = await fetch(`${API_URL}${path}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify(body)\n  });\n  if (!res.ok) {\n    const msg = await res.text().catch(() => res.statusText);\n    throw new Error(msg || `HTTP ${res.status}`);\n  }\n  return await res.json();\n}\n\n// JSON GET (gerekirse)\nexport async function getJSON(path) {\n  const res = await fetch(`${API_URL}${path}`, {\n    credentials: \"include\"\n  });\n  if (!res.ok) {\n    const msg = await res.text().catch(() => res.statusText);\n    throw new Error(msg || `HTTP ${res.status}`);\n  }\n  return await res.json();\n}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","postJSON","path","body","res","fetch","method","headers","credentials","JSON","stringify","ok","msg","text","catch","statusText","Error","status","json","getJSON"],"sources":["C:/Users/Süleyman/Desktop/FoodOrdering/frontend/src/lib/api.ts"],"sourcesContent":["// Tek doğruluk kaynağı: backend tabanı\r\nexport const API_URL =\r\n  (process.env.REACT_APP_API_URL as string) || \"http://localhost:8080\";\r\n\r\n// JSON POST + cookie (JWT) taşımak için\r\nexport async function postJSON<T>(path: string, body: unknown): Promise<T> {\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  if (!res.ok) {\r\n    const msg = await res.text().catch(() => res.statusText);\r\n    throw new Error(msg || `HTTP ${res.status}`);\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n\r\n// JSON GET (gerekirse)\r\nexport async function getJSON<T>(path: string): Promise<T> {\r\n  const res = await fetch(`${API_URL}${path}`, { credentials: \"include\" });\r\n  if (!res.ok) {\r\n    const msg = await res.text().catch(() => res.statusText);\r\n    throw new Error(msg || `HTTP ${res.status}`);\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,OAAO,GACjBC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAe,uBAAuB;;AAEtE;AACA,OAAO,eAAeC,QAAQA,CAAIC,IAAY,EAAEC,IAAa,EAAc;EACzE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,GAAGK,IAAI,EAAE,EAAE;IAC3CI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,WAAW,EAAE,SAAS;IACtBL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE;IACX,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAMV,GAAG,CAACW,UAAU,CAAC;IACxD,MAAM,IAAIC,KAAK,CAACJ,GAAG,IAAI,QAAQR,GAAG,CAACa,MAAM,EAAE,CAAC;EAC9C;EACA,OAAQ,MAAMb,GAAG,CAACc,IAAI,CAAC,CAAC;AAC1B;;AAEA;AACA,OAAO,eAAeC,OAAOA,CAAIjB,IAAY,EAAc;EACzD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,GAAGK,IAAI,EAAE,EAAE;IAAEM,WAAW,EAAE;EAAU,CAAC,CAAC;EACxE,IAAI,CAACJ,GAAG,CAACO,EAAE,EAAE;IACX,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAMV,GAAG,CAACW,UAAU,CAAC;IACxD,MAAM,IAAIC,KAAK,CAACJ,GAAG,IAAI,QAAQR,GAAG,CAACa,MAAM,EAAE,CAAC;EAC9C;EACA,OAAQ,MAAMb,GAAG,CAACc,IAAI,CAAC,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}