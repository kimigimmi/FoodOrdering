{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S\\xFCleyman\\\\Desktop\\\\FoodOrdering\\\\frontend\\\\src\\\\components\\\\Comments.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getJSON, postJSON } from \"../store/api\";\nimport \"../styles/Comments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const load = async () => {\n    try {\n      setError(null);\n      const data = await getJSON(\"/api/comments\");\n      setItems(data !== null && data !== void 0 ? data : []);\n    } catch {\n      setError(\"Couldn't load comments\");\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    try {\n      setLoading(true);\n      setError(null);\n      const created = await postJSON(\"/api/comments\", {\n        name,\n        text\n      });\n      if (created) {\n        setItems(prev => [created, ...prev]);\n        setText(\"\");\n      }\n    } catch {\n      setError(\"Failed to add comment\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cmt\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cmt__inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"cmt__title\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"cmt__card cmt__form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cmt__row\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"cmt__input\",\n            type: \"text\",\n            placeholder: \"Name (optional)\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cmt__row\",\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"cmt__textarea\",\n            placeholder: \"Comment\",\n            rows: 3,\n            value: text,\n            onChange: e => setText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cmt__btn\",\n          disabled: loading,\n          children: loading ? \"Adding...\" : \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cmt__error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cmt__card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cmt__list\",\n          children: [items.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cmt__empty\",\n            children: \"No comments yet \\u2014 be the first!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), items.map(c => /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"cmt__item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"cmt__name\",\n              children: c.name || \"Anonymous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"cmt__text\",\n              children: c.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), c.createdAt && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cmt__meta\",\n              children: new Date(c.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, c.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"ocvnM1E+WPdTCtCiKG9YW9mgCqs=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","getJSON","postJSON","jsxDEV","_jsxDEV","Comments","_s","items","setItems","name","setName","text","setText","loading","setLoading","error","setError","load","data","onSubmit","e","preventDefault","trim","created","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","style","marginTop","rows","disabled","length","map","c","createdAt","Date","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/Süleyman/Desktop/FoodOrdering/frontend/src/components/Comments.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getJSON, postJSON } from \"../store/api\";\r\nimport \"../styles/Comments.css\";\r\n\r\ntype CommentModel = {\r\n  id: number;\r\n  name: string | null;\r\n  text: string;\r\n  createdAt?: string;\r\n};\r\n\r\nexport default function Comments() {\r\n  const [items, setItems] = useState<CommentModel[]>([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const load = async () => {\r\n    try {\r\n      setError(null);\r\n      const data = await getJSON<CommentModel[]>(\"/api/comments\");\r\n      setItems(data ?? []);\r\n    } catch {\r\n      setError(\"Couldn't load comments\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    load();\r\n  }, []);\r\n\r\n  const onSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!text.trim()) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const created = await postJSON<CommentModel>(\"/api/comments\", {\r\n        name,\r\n        text,\r\n      });\r\n      if (created) {\r\n        setItems((prev) => [created, ...prev]);\r\n        setText(\"\");\r\n      }\r\n    } catch {\r\n      setError(\"Failed to add comment\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"cmt\">\r\n      <div className=\"cmt__inner\">\r\n        <h1 className=\"cmt__title\">Comments</h1>\r\n\r\n        <form className=\"cmt__card cmt__form\" onSubmit={onSubmit}>\r\n          <div className=\"cmt__row\">\r\n            <input\r\n              className=\"cmt__input\"\r\n              type=\"text\"\r\n              placeholder=\"Name (optional)\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"cmt__row\" style={{ marginTop: 8 }}>\r\n            <textarea\r\n              className=\"cmt__textarea\"\r\n              placeholder=\"Comment\"\r\n              rows={3}\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <button className=\"cmt__btn\" disabled={loading}>\r\n            {loading ? \"Adding...\" : \"Add\"}\r\n          </button>\r\n          {error && <div className=\"cmt__error\">{error}</div>}\r\n        </form>\r\n\r\n        <div className=\"cmt__card\">\r\n          <div className=\"cmt__list\">\r\n            {items.length === 0 && (\r\n              <div className=\"cmt__empty\">No comments yet — be the first!</div>\r\n            )}\r\n\r\n            {items.map((c) => (\r\n              <article key={c.id} className=\"cmt__item\">\r\n                <h3 className=\"cmt__name\">{c.name || \"Anonymous\"}</h3>\r\n                <p className=\"cmt__text\">{c.text}</p>\r\n                {c.createdAt && (\r\n                  <div className=\"cmt__meta\">\r\n                    {new Date(c.createdAt).toLocaleString()}\r\n                  </div>\r\n                )}\r\n              </article>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}