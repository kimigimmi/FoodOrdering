{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { API } from '../lib/api';\nconst initial = {\n  data: [],\n  loading: false,\n  error: null\n};\nexport const fetchComments = createAsyncThunk('comments/fetch', async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${API}/api/comments`);\n    return data;\n  } catch {\n    const {\n      data\n    } = await axios.get('http://localhost:3001/comments');\n    return data.map((c, i) => {\n      var _c$id;\n      return {\n        id: Number((_c$id = c.id) !== null && _c$id !== void 0 ? _c$id : i + 1),\n        name: c.name,\n        text: c.text\n      };\n    });\n  }\n});\nexport const addComment = createAsyncThunk('comments/add', async p => {\n  try {\n    const {\n      data\n    } = await axios.post(`${API}/api/comments`, p);\n    return data;\n  } catch {\n    var _data$id;\n    const {\n      data\n    } = await axios.post('http://localhost:3001/comments', p);\n    return {\n      id: Number((_data$id = data.id) !== null && _data$id !== void 0 ? _data$id : Date.now()),\n      ...p\n    };\n  }\n});\nconst slice = createSlice({\n  name: 'comments',\n  initialState: initial,\n  reducers: {},\n  extraReducers: b => {\n    b.addCase(fetchComments.pending, s => {\n      s.loading = true;\n      s.error = null;\n    }).addCase(fetchComments.fulfilled, (s, a) => {\n      s.loading = false;\n      s.data = a.payload;\n    }).addCase(fetchComments.rejected, (s, a) => {\n      var _a$error$message;\n      s.loading = false;\n      s.error = (_a$error$message = a.error.message) !== null && _a$error$message !== void 0 ? _a$error$message : 'failed';\n    }).addCase(addComment.fulfilled, (s, a) => {\n      s.data = [a.payload, ...s.data];\n    });\n  }\n});\nexport default slice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","API","initial","data","loading","error","fetchComments","get","map","c","i","_c$id","id","Number","name","text","addComment","p","post","_data$id","Date","now","slice","initialState","reducers","extraReducers","b","addCase","pending","s","fulfilled","a","payload","rejected","_a$error$message","message","reducer"],"sources":["C:/Users/SÃ¼leyman/Desktop/FoodOrdering/frontend/src/store/commentsSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { API } from '../lib/api';\r\nimport type { CommentModel } from '../types';\r\n\r\ntype State = { data: CommentModel[]; loading: boolean; error?: string | null };\r\nconst initial: State = { data: [], loading: false, error: null };\r\n\r\nexport const fetchComments = createAsyncThunk<CommentModel[]>(\r\n  'comments/fetch',\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get<CommentModel[]>(`${API}/api/comments`);\r\n      return data;\r\n    } catch {\r\n      const { data } = await axios.get<any[]>('http://localhost:3001/comments');\r\n      return data.map((c, i) => ({\r\n        id: Number(c.id ?? i + 1),\r\n        name: c.name,\r\n        text: c.text\r\n      }));\r\n    }\r\n  }\r\n);\r\n\r\nexport const addComment = createAsyncThunk<CommentModel, { name: string; text: string }>(\r\n  'comments/add',\r\n  async (p) => {\r\n    try {\r\n      const { data } = await axios.post<CommentModel>(`${API}/api/comments`, p);\r\n      return data;\r\n    } catch {\r\n      const { data } = await axios.post<any>('http://localhost:3001/comments', p);\r\n      return { id: Number(data.id ?? Date.now()), ...p };\r\n    }\r\n  }\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: 'comments',\r\n  initialState: initial,\r\n  reducers: {},\r\n  extraReducers: b => {\r\n    b.addCase(fetchComments.pending, s => { s.loading = true; s.error = null; })\r\n     .addCase(fetchComments.fulfilled, (s, a) => { s.loading = false; s.data = a.payload; })\r\n     .addCase(fetchComments.rejected, (s, a) => { s.loading = false; s.error = a.error.message ?? 'failed'; })\r\n     .addCase(addComment.fulfilled, (s, a) => { s.data = [a.payload, ...s.data]; });\r\n  }\r\n});\r\n\r\nexport default slice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}