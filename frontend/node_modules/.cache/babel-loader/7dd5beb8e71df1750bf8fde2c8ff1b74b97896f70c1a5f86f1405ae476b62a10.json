{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { API_URL, postJSON } from \"../lib/api\";\nconst initialState = {\n  data: [],\n  loading: false,\n  error: null\n};\nexport const fetchComments = createAsyncThunk(\"comments/fetch\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await fetch(`${API_URL}/api/comments`, {\n      credentials: \"include\"\n    });\n    if (!res.ok) throw new Error(await res.text().catch(() => \"\"));\n    return await res.json();\n  } catch (err) {\n    return rejectWithValue((err === null || err === void 0 ? void 0 : err.message) || \"Failed to fetch comments\");\n  }\n});\nexport const addComment = createAsyncThunk(\"comments/add\", async (payload, {\n  rejectWithValue\n}) => {\n  try {\n    // <Response, Request>\n    return await postJSON(\"/api/comments\", payload);\n  } catch (err) {\n    return rejectWithValue((err === null || err === void 0 ? void 0 : err.message) || \"Failed to add comment\");\n  }\n});\nconst commentsSlice = createSlice({\n  name: \"comments\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchComments.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchComments.fulfilled, (state, {\n      payload\n    }) => {\n      state.loading = false;\n      state.data = payload;\n    }).addCase(fetchComments.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload || \"Fetch failed\";\n    }).addCase(addComment.fulfilled, (state, {\n      payload\n    }) => {\n      state.data.unshift(payload);\n    }).addCase(addComment.rejected, (state, action) => {\n      state.error = action.payload || \"Add failed\";\n    });\n  }\n});\nexport default commentsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","API_URL","postJSON","initialState","data","loading","error","fetchComments","_","rejectWithValue","res","fetch","credentials","ok","Error","text","catch","json","err","message","addComment","payload","commentsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","action","unshift","reducer"],"sources":["C:/Users/SÃ¼leyman/Desktop/FoodOrdering/frontend/src/store/commentsSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API_URL, postJSON } from \"../lib/api\";\r\nimport type { CommentModel } from \"../types\";\r\n\r\ntype State = {\r\n  data: CommentModel[];\r\n  loading: boolean;\r\n  error?: string | null;\r\n};\r\n\r\nconst initialState: State = { data: [], loading: false, error: null };\r\n\r\ntype AddCommentReq = { name: string; text: string };\r\n\r\nexport const fetchComments = createAsyncThunk<CommentModel[]>(\r\n  \"comments/fetch\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/api/comments`, { credentials: \"include\" });\r\n      if (!res.ok) throw new Error(await res.text().catch(() => \"\"));\r\n      return (await res.json()) as CommentModel[];\r\n    } catch (err: any) {\r\n      return rejectWithValue(err?.message || \"Failed to fetch comments\") as any;\r\n    }\r\n  }\r\n);\r\n\r\nexport const addComment = createAsyncThunk<CommentModel, AddCommentReq>(\r\n  \"comments/add\",\r\n  async (payload, { rejectWithValue }) => {\r\n    try {\r\n      // <Response, Request>\r\n      return await postJSON<CommentModel, AddCommentReq>(\"/api/comments\", payload);\r\n    } catch (err: any) {\r\n      return rejectWithValue(err?.message || \"Failed to add comment\") as any;\r\n    }\r\n  }\r\n);\r\n\r\nconst commentsSlice = createSlice({\r\n  name: \"comments\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchComments.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchComments.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        state.data = payload;\r\n      })\r\n      .addCase(fetchComments.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = (action.payload as string) || \"Fetch failed\";\r\n      })\r\n      .addCase(addComment.fulfilled, (state, { payload }) => {\r\n        state.data.unshift(payload);\r\n      })\r\n      .addCase(addComment.rejected, (state, action) => {\r\n        state.error = (action.payload as string) || \"Add failed\";\r\n      });\r\n  },\r\n});\r\n\r\nexport default commentsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,OAAO,EAAEC,QAAQ,QAAQ,YAAY;AAS9C,MAAMC,YAAmB,GAAG;EAAEC,IAAI,EAAE,EAAE;EAAEC,OAAO,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAK,CAAC;AAIrE,OAAO,MAAMC,aAAa,GAAGR,gBAAgB,CAC3C,gBAAgB,EAChB,OAAOS,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,eAAe,EAAE;MAAEW,WAAW,EAAE;IAAU,CAAC,CAAC;IAC9E,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9D,OAAQ,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,GAAQ,EAAE;IACjB,OAAOT,eAAe,CAAC,CAAAS,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,OAAO,KAAI,0BAA0B,CAAC;EACpE;AACF,CACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGrB,gBAAgB,CACxC,cAAc,EACd,OAAOsB,OAAO,EAAE;EAAEZ;AAAgB,CAAC,KAAK;EACtC,IAAI;IACF;IACA,OAAO,MAAMP,QAAQ,CAA8B,eAAe,EAAEmB,OAAO,CAAC;EAC9E,CAAC,CAAC,OAAOH,GAAQ,EAAE;IACjB,OAAOT,eAAe,CAAC,CAAAS,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,OAAO,KAAI,uBAAuB,CAAC;EACjE;AACF,CACF,CAAC;AAED,MAAMG,aAAa,GAAGtB,WAAW,CAAC;EAChCuB,IAAI,EAAE,UAAU;EAChBpB,YAAY;EACZqB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,aAAa,CAACqB,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACxB,OAAO,GAAG,IAAI;MACpBwB,KAAK,CAACvB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDqB,OAAO,CAACpB,aAAa,CAACuB,SAAS,EAAE,CAACD,KAAK,EAAE;MAAER;IAAQ,CAAC,KAAK;MACxDQ,KAAK,CAACxB,OAAO,GAAG,KAAK;MACrBwB,KAAK,CAACzB,IAAI,GAAGiB,OAAO;IACtB,CAAC,CAAC,CACDM,OAAO,CAACpB,aAAa,CAACwB,QAAQ,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAClDH,KAAK,CAACxB,OAAO,GAAG,KAAK;MACrBwB,KAAK,CAACvB,KAAK,GAAI0B,MAAM,CAACX,OAAO,IAAe,cAAc;IAC5D,CAAC,CAAC,CACDM,OAAO,CAACP,UAAU,CAACU,SAAS,EAAE,CAACD,KAAK,EAAE;MAAER;IAAQ,CAAC,KAAK;MACrDQ,KAAK,CAACzB,IAAI,CAAC6B,OAAO,CAACZ,OAAO,CAAC;IAC7B,CAAC,CAAC,CACDM,OAAO,CAACP,UAAU,CAACW,QAAQ,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC/CH,KAAK,CAACvB,KAAK,GAAI0B,MAAM,CAACX,OAAO,IAAe,YAAY;IAC1D,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}